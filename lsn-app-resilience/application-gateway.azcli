
az login 

az account list --query "[].{name:name, subscriptionId:id}"

az account set --subscription="<subscription_id>"

#-----------------------------------------------
# Create virtual machines and deploy the vehicle registration site
#-----------------------------------------------
rg="lsn-application-gateway"
location="West Europ"

az group create --name $rg --location

az network vnet create --resource-group $rg --name VehicleAppVnet --address-prefixes 10.0.0.0/16 --subnet-name WebServerSubnet --subnet-prefixes 10.0.1.0/24

git clone https://github.com/MicrosoftDocs/mslearn-load-balance-web-traffic-with-application-gateway module-files

az vm create \
  --resource-group $rg \
  --name webServer1 \
  --image UbuntuLTS \
  --admin-username azureuser \
  --generate-ssh-keys \
  --vnet-name vehicleAppVnet \
  --subnet webServerSubnet \
  --public-ip-address "" \
  --nsg "" \
  --custom-data module-files/scripts/vmconfig.sh \
  --no-wait

az vm create \
  --resource-group $rg \
  --name webServer2 \
  --image UbuntuLTS \
  --admin-username azureuser \
  --generate-ssh-keys \
  --vnet-name vehicleAppVnet \
  --subnet webServerSubnet \
  --public-ip-address "" \
  --nsg "" \
  --custom-data module-files/scripts/vmconfig.sh

  az vm list \
  --resource-group $rg \
  --show-details \
  --output table

#-----------------------------------------------
# Create App Service and deploy the license renewal site
#-----------------------------------------------
APPSERVICE="licenserenewal$RANDOM"

az appservice plan create \
    --resource-group $rg \
    --name vehicleAppServicePlan \
    --sku S1

az webapp create \
    --resource-group $rg \
    --name $APPSERVICE \
    --plan vehicleAppServicePlan \
    --deployment-source-url https://github.com/MicrosoftDocs/mslearn-load-balance-web-traffic-with-application-gateway \
    --deployment-source-branch appService


#-----------------------------------------------
# Application Gateway creation and configuration
# Configure the network for Application Gateway
#-----------------------------------------------
az network vnet subnet create \
  --resource-group $rg \
  --vnet-name vehicleAppVnet  \
  --name appGatewaySubnet \
  --address-prefixes 10.0.0.0/24


az network public-ip create \
  --resource-group $rg \
  --name appGatewayPublicIp \
  --sku Standard \
  --dns-name vehicleapp${RANDOM}

# -----------------------------------------------
# Create an application gateway
# Create an application gateway named vehicleAppGateway with the following configuration:
# A back-end pool containing the IP addresses of the web server virtual machines
# A firewall that blocks malicious requests, such as those used by SQL Injection and Cross-Site Scripting attacks
# A temporary listener that listens to port 8080, this will be replaced in a later step but is required for Application Gateway creation
# A rule that routes (and load balances) these requests to the web servers in the back-end pool
# -----------------------------------------------
az network application-gateway create \
--resource-group $rg \
--name vehicleAppGateway \
--sku WAF_v2 \
--capacity 2 \
--vnet-name vehicleAppVnet \
--subnet appGatewaySubnet \
--public-ip-address appGatewayPublicIp \
--http-settings-protocol Http \
--http-settings-port 8080 \
--frontend-port 8080


WEBSERVER1IP="$(az vm list-ip-addresses \
  --resource-group $rg \
  --name webServer1 \
  --query [0].virtualMachine.network.privateIpAddresses[0] \
  --output tsv)"

WEBSERVER2IP="$(az vm list-ip-addresses \
  --resource-group $rg \
  --name webserver2 \
  --query [0].virtualMachine.network.privateIpAddresses[0] \
  --output tsv)"

az network application-gateway address-pool create \
  --gateway-name vehicleAppGateway \
  --resource-group $rg \
  --name vmPool \
  --servers $WEBSERVER1IP $WEBSERVER2IP


# Now run the following command to create a back-end pool for the license renewal site running on App Service.
az network application-gateway address-pool create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name appServicePool \
    --servers $APPSERVICE.azurewebsites.net

az network application-gateway frontend-port create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name port80 \
    --port 80


az network application-gateway http-listener create \
    --resource-group $rg \
    --name vehicleListener \
    --frontend-port port80 \
    --gateway-name vehicleAppGateway

# Add a health probe
# Create a health probe that tests the availability of a web server. 
# The health probe runs every 15 seconds (--interval 15) and sends an HTTP GET request to the root 
# path of the web app. If the web app doesn't respond within 10 seconds (--timeout 10), the probe times out. 
# The web server is marked as unhealthy if the probe fails three times in succession (--threshold 3).

# Since we're using App Service as one of our back-ends, we will set the host header to the name of 
# the App Service. Without this setting, the App Service won't respond and will not show as healthy.
az network application-gateway probe create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name customProbe \
    --path / \
    --interval 15 \
    --threshold 3 \
    --timeout 10 \
    --protocol Http \
    --host-name-from-http-settings true

# Next, create the HTTP Settings for the gateway to use the health probe we created.
az network application-gateway http-settings update \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name appGatewayBackendHttpSettings \
    --host-name-from-backend-pool true \
    --port 80 \
    --probe customProbe

# Configure path-based routing
# Now we need to configure path-based routing for our Application gateway. We'll 
# route requests to /VehicleRegistration/ to the vmPool and requests to /LicenseRenewal/ to
#  the appServicePool. Any requests without any URL context will be routed to the vmPool as a default.
az network application-gateway url-path-map create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name urlPathMap \
    --paths /VehicleRegistration/* \
    --http-settings appGatewayBackendHttpSettings \
    --address-pool vmPool

# Run the following command to create the path map rule for the appServicePool.
az network application-gateway url-path-map rule create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name appServiceUrlPathMap \
    --paths /LicenseRenewal/* \
    --http-settings appGatewayBackendHttpSettings \
    --address-pool appServicePool \
    --path-map-name urlPathMap


az network application-gateway rule create \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name appServiceRule \
    --http-listener vehicleListener \
    --rule-type PathBasedRouting \
    --address-pool appServicePool \
    --url-path-map urlPathMap


az network application-gateway rule delete \
    --resource-group $rg \
    --gateway-name vehicleAppGateway \
    --name rule1

# In the Cloud Shell, run the following command to generate the root URL your Application Gateway.
echo http://$(az network public-ip show \
  --resource-group $rg \
  --name appGatewayPublicIp \
  --query dnsSettings.fqdn \
  --output tsv)